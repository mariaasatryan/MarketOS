import { Marketplace } from '../types';
import { marketplaceKnowledgeService } from './marketplaceKnowledge';

export interface GPTMessage {
  role: 'user' | 'assistant' | 'system';
  content: string;
}

export interface GPTResponse {
  message: string;
  sources?: string[];
  confidence?: number;
}

export interface MarketplaceContext {
  marketplaces: Marketplace[];
  userData?: {
    totalProducts?: number;
    totalOrders?: number;
    totalRevenue?: number;
  };
}

class GPTService {
  private apiKey: string | null = null;
  private baseUrl = 'https://api.openai.com/v1';

  constructor() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    this.apiKey = process.env.REACT_APP_OPENAI_API_KEY || null;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
   */
  private generateSystemPrompt(context: MarketplaceContext): string {
    const marketplaceNames = context.marketplaces.map(mp => {
      switch (mp) {
        case 'wildberries': return 'Wildberries';
        case 'ozon': return 'Ozon';
        case 'ym': return '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç';
        default: return mp;
      }
    }).join(', ');

    return `–¢—ã - MarketOS GPT, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º. –¢–≤–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${marketplaceNames}.

–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —Å–µ–ª–ª–µ—Ä–∞–º —Å:
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤
- –°—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏ —Ä–µ–∫–ª–∞–º—ã
- –ê–Ω–∞–ª–∏–∑–æ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ —Ä—ã–Ω–∫–∞
- –õ–æ–≥–∏—Å—Ç–∏–∫–æ–π –∏ —Å–∫–ª–∞–¥—Å–∫–∏–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏
- –†–∞–±–æ—Ç–æ–π —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
- –ö–æ–º–∏—Å—Å–∏—è–º–∏ –∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏
- SEO –∏ –ø–æ–∏—Å–∫–æ–≤–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
- –ê–Ω–∞–ª–∏—Ç–∏–∫–æ–π –ø—Ä–æ–¥–∞–∂

–í—Å–µ–≥–¥–∞ –¥–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.
–ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ä—ã–Ω–∫–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤.
–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.`;
  }

  /**
   * –û–±–æ–≥–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
   */
  private enrichUserQuery(query: string, context: MarketplaceContext): string {
    const marketplaceContext = context.marketplaces.length > 0 
      ? `–ö–æ–Ω—Ç–µ–∫—Å—Ç: —Ä–∞–±–æ—Ç–∞—é —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ ${context.marketplaces.join(', ')}. `
      : '';
    
    return `${marketplaceContext}${query}`;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ GPT API
   */
  async askQuestion(
    question: string, 
    context: MarketplaceContext,
    conversationHistory: GPTMessage[] = []
  ): Promise<GPTResponse> {
    if (!this.apiKey) {
      // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ, –µ—Å–ª–∏ API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      return this.getLocalResponse(question, context);
    }

    try {
      const systemPrompt = this.generateSystemPrompt(context);
      const enrichedQuery = this.enrichUserQuery(question, context);

      const messages: GPTMessage[] = [
        { role: 'system', content: systemPrompt },
        ...conversationHistory,
        { role: 'user', content: enrichedQuery }
      ];

      const response = await fetch(`${this.baseUrl}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: 'gpt-4',
          messages: messages,
          max_tokens: 1000,
          temperature: 0.7,
        }),
      });

      if (!response.ok) {
        throw new Error(`GPT API error: ${response.status}`);
      }

      const data = await response.json();
      const message = data.choices[0]?.message?.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.';

      return {
        message,
        confidence: 0.9,
        sources: ['MarketOS Knowledge Base', 'OpenAI GPT-4']
      };

    } catch (error) {
      console.error('GPT API Error:', error);
      // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ
      return this.getLocalResponse(question, context);
    }
  }

  /**
   * –õ–æ–∫–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–≥–¥–∞ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
   */
  private getLocalResponse(question: string, context: MarketplaceContext): GPTResponse {
    const lowerQuestion = question.toLowerCase();
    const marketplaceNames = context.marketplaces.map(mp => {
      switch (mp) {
        case 'wildberries': return 'Wildberries';
        case 'ozon': return 'Ozon';
        case 'ym': return '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç';
        default: return mp;
      }
    }).join(', ');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    if (lowerQuestion.includes('–∫–æ–º–∏—Å—Å–∏—è') || lowerQuestion.includes('–∫–æ–º–∏—Å—Å–∏–∏')) {
      const commissionInfo = marketplaceKnowledgeService.getCommissionInfo(context.marketplaces);
      return {
        message: `–ö–æ–º–∏—Å—Å–∏–∏ –Ω–∞ ${marketplaceNames}:\n\n${commissionInfo}\n\nüí° –°–æ–≤–µ—Ç: –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π.`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤'],
        confidence: 0.9
      };
    }
    
    if (lowerQuestion.includes('—Ä–µ–∫–ª–∞–º–∞') || lowerQuestion.includes('–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ')) {
      const advertisingTips = marketplaceKnowledgeService.getAdvertisingTips(context.marketplaces);
      return {
        message: `–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ ${marketplaceNames}:\n\n${advertisingTips.map(tip => `‚Ä¢ ${tip}`).join('\n')}\n\nüí∞ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –±—é–¥–∂–µ—Ç: 10-15% –æ—Ç –æ–±–æ—Ä–æ—Ç–∞ –Ω–∞ —Ä–µ–∫–ª–∞–º—É.`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–µ–∫–ª–∞–º–µ'],
        confidence: 0.85
      };
    }
    
    if (lowerQuestion.includes('–ª–æ–≥–∏—Å—Ç–∏–∫–∞') || lowerQuestion.includes('–¥–æ—Å—Ç–∞–≤–∫–∞')) {
      const logisticsTips = marketplaceKnowledgeService.getLogisticsTips(context.marketplaces);
      return {
        message: `–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è ${marketplaceNames}:\n\n${logisticsTips.map(tip => `‚Ä¢ ${tip}`).join('\n')}\n\nüöö –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—á–Ω–∏—Ç–µ —Å FBO –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ–¥–∞–∂.`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã'],
        confidence: 0.9
      };
    }

    if (lowerQuestion.includes('–∫–∞—Ä—Ç–æ—á–∫–∞') || lowerQuestion.includes('–æ–ø–∏—Å–∞–Ω–∏–µ') || lowerQuestion.includes('–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è')) {
      const optimizationTips = marketplaceKnowledgeService.getOptimizationTips(context.marketplaces);
      return {
        message: `–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è ${marketplaceNames}:\n\n${optimizationTips.map(tip => `‚Ä¢ ${tip}`).join('\n')}\n\nüìà –≠—Ç–æ —É–≤–µ–ª–∏—á–∏—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 20-30%.`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', 'SEO-—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ'],
        confidence: 0.8
      };
    }

    if (lowerQuestion.includes('–æ—Ç–∑—ã–≤') || lowerQuestion.includes('—Ä–µ–π—Ç–∏–Ω–≥')) {
      const reviewTips = marketplaceKnowledgeService.getOptimizationTips(context.marketplaces)
        .filter(tip => tip.toLowerCase().includes('–æ—Ç–∑—ã–≤') || tip.toLowerCase().includes('—Ä–µ–π—Ç–∏–Ω–≥'));
      return {
        message: `–†–∞–±–æ—Ç–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–∞ ${marketplaceNames}:\n\n${reviewTips.map(tip => `‚Ä¢ ${tip}`).join('\n')}\n\n‚≠ê –¶–µ–ª—å: —Ä–µ–π—Ç–∏–Ω–≥ –≤—ã—à–µ 4.5 –∑–≤–µ–∑–¥.`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏'],
        confidence: 0.85
      };
    }

    // –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
    const searchResults = marketplaceKnowledgeService.searchKnowledge(question, context.marketplaces);
    if (searchResults.length > 0) {
      return {
        message: `–ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:\n\n${searchResults.map(result => `‚Ä¢ ${result}`).join('\n')}\n\n–ù—É–∂–Ω–∞ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è?`,
        sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS'],
        confidence: 0.8
      };
    }

    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    const optimizationTips = marketplaceKnowledgeService.getOptimizationTips(context.marketplaces);
    return {
      message: `–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–ª—è —Ä–∞–±–æ—Ç—ã —Å ${marketplaceNames} —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n${optimizationTips.slice(0, 5).map(tip => `‚Ä¢ ${tip}`).join('\n')}\n\n–ù—É–∂–Ω–∞ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É?`,
      sources: ['–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π MarketOS', '–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'],
      confidence: 0.7
    };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  async getOptimizationTips(marketplace: Marketplace): Promise<string[]> {
    const tips: Record<Marketplace, string[]> = {
      wildberries: [
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WB Boost –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤',
        '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–¥ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã',
        '–†–∞–±–æ—Ç–∞–π—Ç–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏',
        '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ WB Analytics'
      ],
      ozon: [
        '–ü–æ–¥–∫–ª—é—á–∏—Ç–µ Ozon Premium –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–Ω–Ω–µ—Ä–Ω—É—é —Ä–µ–∫–ª–∞–º—É –≤ –∫–∞—Ç–∞–ª–æ–≥–µ',
        '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∫–∏–¥–∫–∏',
        '–†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π'
      ],
      ym: [
        '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞',
        '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø–æ–¥ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ø–Ω–¥–µ–∫—Å–∞',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
        '–†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤'
      ],
      smm: []
    };

    return tips[marketplace] || [];
  }
}

export const gptService = new GPTService();
